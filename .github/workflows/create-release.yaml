name: Create Release

on:
  pull_request_target:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  should-run:
    name: Should run
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    outputs:
      value: ${{ steps.get-value.outputs.value }}
    steps:
      - if: github.event.pull_request.head.repo.full_name != github.repository
        run: |
          echo "value=false" >> $GITHUB_ENV
          exit 0

      - if: startsWith(github.head_ref, 'releases/v') != true
        run: |
          echo "value=false" >> $GITHUB_ENV
          exit 0

      - if: github.event.pull_request.user.login != 'taiyme-release-bot[bot]'
        run: |
          echo "value=false" >> $GITHUB_ENV
          exit 0

      - id: get-value
        if: ${{ ! cancelled() }}
        run: |
          echo "value=${value:-true}" >> $GITHUB_OUTPUT

  parse-version:
    name: Parse version
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs:
      - should-run
    if: needs.should-run.outputs.value == 'true'
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
      branch: ${{ steps.extract-version.outputs.branch }}
      tag: v${{ steps.extract-version.outputs.version }}
    steps:
      - name: Extract version
        id: extract-version
        env:
          branch: ${{ github.head_ref }}
        run: |
          version="${branch#releases/v}"
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "branch=${branch}" >> $GITHUB_OUTPUT

  merge-pr:
    name: Merge PR
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs:
      - parse-version
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: ${{ secrets.RELEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_PRIVATE_KEY }}

      - name: Merge PR
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          gh pr checks ${{ github.event.number }} --watch
          gh pr ready ${{ github.event.number }}
          gh pr merge ${{ github.event.number }} --squash --delete-branch --auto

  get-merge-commit:
    name: Get merge commit
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs:
      - merge-pr
    outputs:
      merge_commit: ${{ steps.get-merge-commit.outputs.result }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      pull-requests: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          ref: ${{ github.sha }}
          fetch-depth: 1

      - name: Get merge commit
        id: get-merge-commit
        env:
          pr_number: ${{ github.event.number }}
        run: |
          interval=10
          max_retries=60

          for ((i=1; i<=max_retries; i++)); do
            result=$(gh pr view $pr_number --json mergeCommit --template '{{ .mergeCommit.oid }}' 2>/dev/null)

            if [[ -n "$result" && "$result" != "null" ]]; then
              echo "result=${result}" >> $GITHUB_OUTPUT
              exit 0
            fi

            sleep "$interval"
          done

          exit 1

  create-release:
    name: Create Release
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs:
      - parse-version
      - get-merge-commit
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: ${{ secrets.RELEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          user_id="$(gh api '/users/${{ steps.app-token.outputs.app-slug }}[bot]' --jq '.id')"
          echo "user-id=${user_id}" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false
          ref: ${{ needs.get-merge-commit.outputs.merge_commit }}
          fetch-depth: 0

      - name: Create tag
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'
          git remote set-url origin 'https://x-access-token:${{ steps.app-token.outputs.token }}@github.com/${{ github.repository }}'
          git tag ${{ needs.parse-version.outputs.tag }} ${{ needs.get-merge-commit.outputs.merge_commit }}
          git push origin ${{ needs.parse-version.outputs.tag }}

      - name: Create Release
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          gh release create ${{ needs.parse-version.outputs.tag }} --generate-notes
