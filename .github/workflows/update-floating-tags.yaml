name: Update floating tags

on:
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

permissions: {}

jobs:
  get-floating-tags:
    name: Get floating tags
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    env:
      source_tag: ${{ github.event.release.tag_name }}
    outputs:
      source-tag: ${{ env.source_tag }}
      floating-tags: ${{ steps.get-floating-tags.outputs.tags || '[]' }}
    steps:
      - name: Get floating tags
        id: get-floating-tags
        run: |
          if [[ "$source_tag" =~ ^v[1-9][0-9]*\.[0-9]+\.[0-9]+$ ]]; then
            v_major_minor="${source_tag%.*}"
            v_major="${v_major_minor%.*}"
            tags=(
              "$v_major_minor"
              "$v_major"
            )
            tags_array="$(printf '%s\n' "${tags[@]}" | jq -R . | jq -sc .)"
            echo "tags=${tags_array}" >> "$GITHUB_OUTPUT"
          else
            echo "::notice::Ignored version: ${source_tag} (must be a stable release)"
            echo "tags=[]" >> "$GITHUB_OUTPUT"
          fi

  update-floating-tag:
    name: Update floating tag
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    needs:
      - get-floating-tags
    if: ${{ needs.get-floating-tags.outputs.floating-tags != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        floating-tag: ${{ fromJSON(needs.get-floating-tags.outputs.floating-tags) }}
    env:
      source_tag: ${{ needs.get-floating-tags.outputs.source-tag }}
      floating_tag: ${{ matrix.floating-tag }}
    steps:
      - name: Create GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        with:
          app-id: ${{ secrets.RELEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_PRIVATE_KEY }}
          permission-metadata: read
          permission-contents: write

      - name: Get GitHub App User ID
        id: get-user-id
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          app_slug: ${{ steps.app-token.outputs.app-slug }}
        run: |
          user_id="$(gh api "/users/${app_slug}[bot]" --jq '.id')"
          echo "user-id=${user_id}" >> "$GITHUB_OUTPUT"

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false
          ref: ${{ env.source_tag }}
          fetch-depth: 0
          fetch-tags: true

      - name: Configure Git credentials
        env:
          app_slug: ${{ steps.app-token.outputs.app-slug }}
          app_user_id: ${{ steps.get-user-id.outputs.user-id }}
          app_token: ${{ steps.app-token.outputs.token }}
        run: |
          git config --global user.name "${app_slug}[bot]"
          git config --global user.email "${app_user_id}+${app_slug}[bot]@users.noreply.github.com"
          git remote set-url origin "https://x-access-token:${app_token}@github.com/${GITHUB_REPOSITORY}"

      - name: Sync ${{ env.floating_tag }} tag to ${{ env.source_tag }}
        run: |
          git tag --force "$floating_tag" "refs/tags/${source_tag}"
          git push --force origin "refs/tags/${floating_tag}"
